#####################################################################
# General Configuration
#####################################################################

[exclude_object]
# This section can be used to list any objects or configurations to exclude from the setup if needed.

[include mainsail.cfg]
# This includes the Mainsail configuration file, which controls the printer through the Mainsail web interface.

[include shell_command.cfg]
# Includes shell commands that allow executing system-level commands during the printing process.

[include led.cfg]
# Includes configurations for LEDs and effects that might be used during operation to provide visual feedback (e.g., print status, error states).

[include printer_macros.cfg]

# [include adxl345.cfg]  # Uncomment this line if you are using an ADXL345 accelerometer for vibration detection.

#####################################################################
# Input Shaper Settings
#####################################################################

[input_shaper]
# Input shaping reduces mechanical oscillations, resulting in smoother motion and improved print quality.
# These settings allow you to configure input shaping for the X and Y axes.

# shaper_freq_x: 0  # Frequency for shaping the X-axis input (set to 0 to disable shaping on X-axis).
# shaper_type_x: mzv  # Type of input shaper for the X-axis (options: 'mzv', 'ei', etc.).
# shaper_freq_y: 0  # Frequency for shaping the Y-axis input (set to 0 to disable shaping on Y-axis).
# shaper_type_y: mzv  # Type of input shaper for the Y-axis.

#####################################################################
# MCU (Microcontroller) Settings
#####################################################################

[mcu]
# The MCU section defines the microcontroller and communication parameters.
# Use "ls -l /dev/serial/by-id/" to obtain the serial definition.

serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_510036001150415833323520-if00
# This is the serial port used for communication with the microcontroller. Adjust this based on your system.

#####################################################################
# Temperature Sensor Settings
#####################################################################

[temperature_sensor mcu_temp]
# MCU temperature sensor settings to monitor the temperature of the microcontroller.
sensor_type: temperature_mcu
min_temp: 0  # Minimum allowed temperature for the MCU.
max_temp: 100  # Maximum allowed temperature for the MCU.

[temperature_sensor host_temp]
# Host temperature sensor settings to monitor the host machine (e.g., Raspberry Pi).
sensor_type: temperature_host
min_temp: 10  # Minimum allowed temperature for the host.
max_temp: 100  # Maximum allowed temperature for the host.

#####################################################################
# Printer Motion Settings
#####################################################################

[printer]
# Printer kinematics and movement settings. Here we are using CoreXY for the printer setup.

kinematics: corexy
max_velocity: 500  # Maximum velocity in mm/s.
max_accel: 15000  # Maximum acceleration in mm/s².
max_z_velocity: 50  # Maximum Z-axis velocity in mm/s.
max_z_accel: 100  # Maximum Z-axis acceleration in mm/s².
square_corner_velocity: 20  # Velocity for smooth cornering when moving diagonally.

#####################################################################
# X/Y Stepper Motor Settings
#####################################################################

# X-axis stepper motor configuration
[stepper_x]
step_pin: PC6  # Pin for controlling the stepper motor for the X-axis.
dir_pin: PA14  # Direction pin for the X-axis motor.
enable_pin: !PC7  # Pin to enable/disable the X-axis stepper motor (inverted signal).
rotation_distance: 40  # Distance per rotation of the motor (depends on the screw or gearing used).
microsteps: 32  # Microstepping level for finer motion.
full_steps_per_rotation: 200  # Full steps per rotation (for 1.8° motors).
endstop_pin: tmc2209_stepper_x:virtual_endstop  # Virtual endstop for sensorless homing with TMC2209 driver.
position_endstop: 121  # The position of the virtual endstop (set based on the mechanical limits of the printer).
position_max: 121  # Maximum X-axis position.
homing_speed: 40  # Speed for homing the X-axis (recommended 20 mm/s for smooth operation).
homing_retract_dist: 2.0  # Distance to retract the motor after hitting the endstop.

# TMC2209 driver settings for X-axis (sensorless homing)
[tmc2209 stepper_x]
uart_pin: PB12  # UART pin for TMC2209 communication.
interpolate: false  # Disable interpolation, typically used with sensorless homing.
run_current: 0.848  # Motor run current (typically 60-70% of the motor's rated current).
hold_current: 0.5  # Hold current (lower to reduce idle heat).
sense_resistor: 0.110  # The sense resistor value for TMC2209 drivers (default is 0.110 ohms).
stealthchop_threshold: 0  # Set to 0 to disable StealthChop and use SpreadCycle for sensorless homing.
diag_pin: ^PC0  # Diagnostic pin for TMC2209, essential for sensorless homing.
driver_SGTHRS: 55  # Sensitivity threshold for StallGuard, used in sensorless homing (adjust for smoother/aggressive behavior).

# Y-axis stepper motor configuration (similar to X-axis)
[stepper_y]
step_pin: PB10  # Pin for controlling the Y-axis stepper motor.
dir_pin: PB2  # Direction pin for the Y-axis motor.
enable_pin:!PB11  # Pin to enable the Y-axis motor (invert if needed).
rotation_distance: 40  # Rotation distance for the Y-axis motor (based on gearing/screw used).
microsteps: 32  # Microstepping for smoother motion.
full_steps_per_rotation: 200  # Full steps per rotation.
endstop_pin: tmc2209_stepper_y:virtual_endstop  # Virtual endstop for Y-axis.
position_endstop: 121  # Position of the Y-axis virtual endstop.
position_max: 121  # Maximum position for the Y-axis.
homing_speed: 40  # Slower homing speed (recommended for smoother homing).
homing_retract_dist: 2.0  # Retracts after hitting the endstop to soften impact.

# TMC2209 driver settings for Y-axis (same as X-axis)
[tmc2209 stepper_y]
uart_pin: PC10  # UART pin for TMC2209 communication.
interpolate: false  # Disable interpolation for sensorless homing.
run_current: 0.848  # Motor run current for Y-axis (same as X-axis).
hold_current: 0.5  # Hold current for Y-axis (reduce idle heat).
sense_resistor: 0.110  # Sense resistor value for TMC2209.
stealthchop_threshold: 0  # Disable StealthChop, uses SpreadCycle for better performance.
diag_pin: ^PC1  # Diagnostic pin for Y-axis sensorless homing.
driver_SGTHRS: 55  # Sensitivity threshold for StallGuard, similar to X-axis settings.

#####################################################################
# Z Stepper Motor Settings
#####################################################################

# Z-axis stepper motor configuration
[stepper_z]
step_pin: PB0  # Pin for controlling the Z-axis stepper motor.
dir_pin: PC5  # Direction pin for Z-axis motor.
enable_pin: !PB1  # Pin to enable the Z-axis motor.
rotation_distance: 8  # Distance per step for T8x8 lead screw systems.
microsteps: 32  # Microstepping for smoother movement.
endstop_pin: ^PC2  # Pin for Z-axis endstop switch (ensure it's connected properly).
position_max: 120  # Maximum Z-axis position.
position_min: -1.5  # Minimum position for the Z-axis (optional, for physical limits).
homing_speed: 40  # Speed for Z-axis homing.
second_homing_speed: 3.0  # Slower second homing speed for more precise leveling.
homing_retract_dist: 3.0  # Retraction distance after hitting the Z-axis endstop.

# TMC2209 driver settings for Z-axis (sensorless homing)
[tmc2209 stepper_z]
uart_pin: PC9  # UART pin for TMC2209 communication.
interpolate: true  # Enable interpolation for smoother movement at low speeds.
run_current: 0.707  # Motor run current (set to ~60-70% of rated current).
hold_current: 0.5  # Hold current to reduce heat when the motor is idle.
sense_resistor: 0.110  # Sense resistor value for TMC2209 drivers.
stealthchop_threshold: 999999  # Enable StealthChop for quieter

#####################################################################
#   Extruder Configuration
#####################################################################

[extruder]
# Configuration for the extruder motor and components, such as stepper motor, heater, and sensor.

step_pin: PB3  # Pin used for sending step signals to the extruder motor.
dir_pin: PB4   # Pin controlling the direction of the extruder motor.
enable_pin: !PD5  # Pin used to enable/disable the extruder motor (inverted signal if necessary).
microsteps: 16  # Microstepping level (higher values result in smoother motion).
full_steps_per_rotation: 200  # Number of full steps per rotation (for 1.8° motors).
rotation_distance: 4.61  # Distance moved per full rotation of the extruder motor.
nozzle_diameter: 1.75  # Diameter of the nozzle in mm.
filament_diameter: 1.750  # Diameter of the filament in mm (should match your filament type).
max_extrude_only_distance: 150  # Maximum extruded length without any other movement.
max_extrude_only_velocity: 120  # Maximum velocity for extruding filament.
pressure_advance: 0.035  # Pressure advance value for better extrusion control.
pressure_advance_smooth_time: 0.040  # Smoothing time for pressure advance adjustments.

# Extruder heater configuration
heater_pin: PC8  # Pin used to control the extruder heater.
sensor_type: PT1000  # Type of temperature sensor used for the extruder.
sensor_pin: PA0  # Pin for reading the extruder temperature sensor.
#control: pid  # Uncomment to enable PID control for the extruder temperature.
#pid_Kp: 37.260  # PID proportional constant.
#pid_Ki: 3.653   # PID integral constant.
#pid_Kd: 95.013  # PID derivative constant.
min_temp: -100  # Minimum temperature for the extruder heater.
max_temp: 300  # Maximum temperature for the extruder heater.
min_extrude_temp: 180  # Minimum extruder temperature for extrusion to occur.
step_pulse_duration: 0.000004  # Duration of a step pulse for the extruder.
max_extrude_cross_section: 0.8  # Maximum cross-sectional area for extrusion (adjust for filament).

# TMC2209 driver settings for the extruder stepper motor
[tmc2209 extruder]
uart_pin: PA13  # UART pin for TMC2209 communication (check pinout).
interpolate: true  # Enable interpolation for smoother motor control.
run_current: 0.707  # Motor run current, typically 60-70% of rated current.
sense_resistor: 0.11  # The sense resistor value for the TMC2209 (default 0.11 ohms).
stealthchop_threshold: 999999  # Set to 999999 to enable StealthChop for quieter operation.
driver_TBL: 0  # Table of current values (can be adjusted based on motor and driver needs).
driver_HEND: 6  # High-end driver settings (check manufacturer recommendations).
driver_HSTRT: 7  # High-start driver settings (check manufacturer recommendations).
driver_TOFF: 4  # Driver off time for better power control.

#####################################################################
#   Bed Heater Configuration
#####################################################################

[heater_bed]
# Configuration for the heated bed, including the heater, temperature sensor, and control settings.

heater_pin: PD8  # Pin controlling the bed heater.
# Check the thermistor type you have by referring to the Klipper documentation.
# Use "Generic 3950" for Keenovo heaters, or specify your own thermistor.
sensor_type: Generic 3950  # Type of temperature sensor used for the bed.
sensor_pin: PC4  # Pin for the bed temperature sensor.
smooth_time: 3.0  # Time constant for smoothing the bed temperature readings.

#max_power: 0.6  # Max power for the bed heater (only needed for higher-power pads).
min_temp: -100  # Minimum allowable temperature for the bed heater.
max_temp: 125  # Maximum allowable temperature for the bed heater.
#control: pid  # Uncomment to use PID control for the bed heater (use after calibration).
#pid_Kp: 64.673  # PID proportional constant for the bed.
#pid_Ki: 3.563   # PID integral constant for the bed.
#pid_Kd: 293.452  # PID derivative constant for the bed.

#####################################################################
#   Fan Control Configuration
#####################################################################

[heater_fan hotend_fan]
# Configuration for the hotend fan (FAN1) used to cool the hotend during printing.
pin: PD3  # Pin used to control the hotend fan.
max_power: 1.0  # Maximum power for the fan (0-1 scale).
kick_start_time: 0.5  # Time to allow the fan to kick-start before running at full power.
heater: extruder  # The heater associated with the fan (this fan will be triggered when the extruder is active).
heater_temp: 50.0  # Temperature threshold at which to activate the fan (turn on when the extruder reaches 50°C).

[fan]
# General-purpose fan configuration (FAN0) used for cooling the print.
pin: PD2  # Pin used to control the general-purpose fan.
max_power: 1.0  # Maximum power for the fan.
kick_start_time: 0.5  # Time to allow the fan to start up.
off_below: 0.13  # Fan will turn off when the temperature drops below this threshold (for cooling).
cycle_time: 0.010  # Fan cycle time in seconds.

[controller_fan controller_fan]
# Controller fan configuration (FAN2A) used to cool the printer's control electronics.
pin: PD4  # Pin controlling the controller fan.
max_power: 1.0  # Maximum power for the controller fan.
kick_start_time: 0.5  # Start-up time for the fan.
off_below: 0.13  # Fan turns off below this temperature.
cycle_time: 0.010  # Fan cycle time.

# #####################################################################
# #   Homing and Gantry Adjustment Routines
# #####################################################################

# [idle_timeout]
# # Time after which the printer enters idle mode (e.g., if not printing).
# timeout: 1800  # Timeout duration in seconds (30 minutes).

[homing_override]
# Overrides for homing the printer, allowing for custom homing routines.
axes: xyz  # Homing for all three axes: X, Y, and Z.
set_position_z: 0  # Set the Z position to 0 after homing.
gcode:
   G90  # Use absolute positioning mode.
   G0 Z5 F600  # Move the Z-axis to 5mm at 600mm/s.
   {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

   {% if home_all or 'X' in params %}
     _HOME_X  # Home the X-axis.
   {% endif %}
   
   {% if home_all or 'Y' in params %}
     _HOME_Y  # Home the Y-axis.
   {% endif %}
   
   {% if home_all or 'Z' in params %}
     _HOME_Z  # Home the Z-axis.
   {% endif %}
   G0 X60 Y60 Z60  # Move to the center of the bed with a Z offset for safety.

## To be used with BED_SCREWS_ADJUST
[bed_screws]
# Adjust bed screws for leveling using specific screw positions on the bed.
screw1: 60,5  # Front screw position (X, Y).
screw1_name: front screw
screw2: 5,115  # Back-left screw position (X, Y).
screw2_name: back left
screw3: 115,115  # Back-right screw position (X, Y).
screw3_name: back right

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [stepper_z]
#*# position_endstop = 117.695
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 24.283
#*# pid_ki = 1.173
#*# pid_kd = 125.663
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 64.460
#*# pid_ki = 3.411
#*# pid_kd = 304.571
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 79.0
#*# shaper_type_y = mzv
#*# shaper_freq_y = 95.2